/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 OD.glb 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import { useFBX } from '@react-three/drei'
import { useEffect } from 'react'

export function Od(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/OD.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group) 
  useEffect(() =>{
    if (actions) {
      // Démarre la première animation (ou change en fonction de l'animation désirée)
      const action = actions[Object.keys(actions)[0]]; // Prend la première animation
      action.reset().fadeIn(0.5).play(); // Démarre et fait un fondu
    }
  }, [actions])
  return (
    <group ref={group} {...props} dispose={null} scale={0.063}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <group name="Proxy">
            <skinnedMesh name="Proxy_1" geometry={nodes.Proxy_1.geometry} material={materials.Default} skeleton={nodes.Proxy_1.skeleton} />
            <skinnedMesh name="Proxy_1_1" geometry={nodes.Proxy_1_1.geometry} material={materials['Material.001']} skeleton={nodes.Proxy_1_1.skeleton} />
            <skinnedMesh name="Proxy_1_2" geometry={nodes.Proxy_1_2.geometry} material={materials['Material.002']} skeleton={nodes.Proxy_1_2.skeleton} />
            <skinnedMesh name="Proxy_1_3" geometry={nodes.Proxy_1_3.geometry} material={materials['Material.003']} skeleton={nodes.Proxy_1_3.skeleton} />
            <skinnedMesh name="Proxy_1_4" geometry={nodes.Proxy_1_4.geometry} material={materials['Material.004']} skeleton={nodes.Proxy_1_4.skeleton} />
            <skinnedMesh name="Proxy_1_5" geometry={nodes.Proxy_1_5.geometry} material={materials['Material.005']} skeleton={nodes.Proxy_1_5.skeleton} />
            <skinnedMesh name="Proxy_1_6" geometry={nodes.Proxy_1_6.geometry}  skeleton={nodes.Proxy_1_6.skeleton} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/OD.glb')
